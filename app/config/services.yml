# Learn more about services, parameters and containers at
# http://symfony.com/doc/current/book/service_container.html
parameters:
  sylius_cart_restaurant_session_key_name: _coopcycle.sylius.cart.restaurant

services:
#    service_name:
#        class: AppBundle\Directory\ClassName
#        arguments: ["@another_service_name", "plain_value", "%parameter_name%"]

  Sylius\Component\Product\Resolver\ProductVariantResolverInterface: '@sylius.product_variant_resolver.default'
  Sylius\Component\Currency\Context\CurrencyContextInterface: '@sylius.context.currency'

  app.locale_listener:
    class: AppBundle\EventListener\LocaleListener
    arguments: ['%kernel.default_locale%']
    tags:
      - { name: kernel.event_subscriber }

  coopcycle.seo.event_listener:
    class: AppBundle\EventListener\SeoListener
    arguments: ['@translator', '@sonata.seo.page.default']
    tags:
      - { name: kernel.event_listener, event: kernel.request }

  sylius.context.locale.request_based:
    class: Sylius\Bundle\LocaleBundle\Context\RequestBasedLocaleContext
    arguments: ['@request_stack', '@sylius.locale_provider']
    tags:
      - { name: sylius.context.locale, priority: 128 }

  sylius.context.locale.immutable:
    class: Sylius\Component\Locale\Context\ImmutableLocaleContext
    arguments: ['%sylius_locale.locale%']
    tags:
      - { name: sylius.context.locale, priority: 64 }

  sylius.context.currency.settings_aware:
    class: AppBundle\Sylius\Currency\SettingsAwareCurrencyContext
    arguments: ['@coopcycle.settings_manager']
    tags:
      - { name: sylius.context.currency }

  sylius.order_processing.order_fee_processor:
    class: AppBundle\Sylius\OrderProcessing\OrderFeeProcessor
    arguments:
      - "@sylius.factory.adjustment"
      - "@translator"
    tags:
      - { name: sylius.order_processor, priority: 64 }

  sylius.order_processing.order_options_processor:
    class: AppBundle\Sylius\OrderProcessing\OrderOptionsProcessor
    arguments:
      - "@sylius.factory.adjustment"
    tags:
      - { name: sylius.order_processor, priority: 48 }

  sylius.order_processing.order_taxes_processor:
    class: AppBundle\Sylius\OrderProcessing\OrderTaxesProcessor
    arguments:
      - "@sylius.factory.adjustment"
      - "@sylius.tax_rate_resolver"
      - "@sylius.tax_calculator"
      - "@coopcycle.settings_manager"
      - "@sylius.repository.tax_category"
    tags:
      - { name: sylius.order_processor, priority: 32 }

  sylius.order_processing.order_payment_processor:
    class: AppBundle\Sylius\OrderProcessing\OrderPaymentProcessor
    arguments:
      - "@doctrine"
      - "@sylius.context.currency"
    tags:
      - { name: sylius.order_processor, priority: 16 }

  coopcycle.sylius.factory.product_variant:
    class: AppBundle\Sylius\Product\ProductVariantFactory
    decorates: sylius.factory.product_variant
    arguments:
      - "@coopcycle.sylius.factory.product_variant.inner"
      - "@sylius.repository.product"
      - "@sylius.repository.product_variant"
      - "@sylius.repository.tax_category"
      - "@coopcycle.settings_manager"
      - "@translator"
    public: false

  coopcycle.sylius.factory.order:
    class: AppBundle\Sylius\Order\OrderFactory
    decorates: sylius.factory.order
    arguments:
      - "@coopcycle.sylius.factory.order.inner"
    public: false

  coopcycle.sylius.product_variant_resolver.lazy:
    class: AppBundle\Sylius\Product\LazyProductVariantResolver
    arguments:
      - "@sylius.product_variant_resolver.default"
      - "@sylius.factory.product_variant"
    public: true

  sylius.context.cart.restaurant:
    class: AppBundle\Sylius\Cart\RestaurantCartContext
    arguments:
      - "@session"
      - "@sylius.repository.order"
      - "@sylius.factory.order"
      - "@coopcycle.repository.restaurant"
      - "%sylius_cart_restaurant_session_key_name%"
    tags:
      - { name: sylius.context.cart, priority: 32 }

  app.form.api_registration:
    class: AppBundle\Form\ApiRegistrationType
    arguments: ['%country_iso%']
    tags:
      - { name: form.type, alias: app_user_api_registration }

  app.form.registration:
    class: AppBundle\Form\RegistrationType
    arguments: ['%country_iso%', '%is_demo%']
    tags:
      - { name: form.type }

  app.form.update_profile:
    class: AppBundle\Form\UpdateProfileType
    arguments: [ '@security.token_storage', '@translator', '%country_iso%' ]
    tags:
      - { name: form.type, alias: app_update_profile }

  coopcycle.repository.zone:
    class: Doctrine\ORM\EntityRepository
    factory: ['@doctrine.orm.default_entity_manager', getRepository]
    arguments:
      - AppBundle\Entity\Zone

  coopcycle.repository.remote_push_token:
    class: Doctrine\ORM\EntityRepository
    factory: ['@doctrine.orm.default_entity_manager', getRepository]
    arguments:
      - AppBundle\Entity\RemotePushToken

  coopcycle.expression_language.zone.provider:
    public: false
    class: AppBundle\ExpressionLanguage\ZoneExpressionLanguageProvider
    arguments: [ '@coopcycle.repository.zone' ]

  coopcycle.expression_language:
    public: true
    class: AppBundle\ExpressionLanguage\ExpressionLanguage
    arguments:
      - null
      - [ "@coopcycle.expression_language.zone.provider" ]

  my.registration_listener:
    class: AppBundle\EventListener\RegistrationListener
    arguments: ['@router']
    tags:
      - { name: kernel.event_subscriber }

  coopcycle.web_authentication_listener:
    class: AppBundle\EventListener\WebAuthenticationListener
    arguments: ['@sylius.manager.order', '@sylius.context.cart']
    tags:
      - { name: kernel.event_subscriber }

  'AppBundle\EventListener\SyliusIdGeneratorSubscriber':
    tags:
      - { name: doctrine.event_subscriber, connection: default }

  'AppBundle\EventListener\TaggableSubscriber':
    arguments: [ '@coopcycle.tag_manager' ]
    tags:
      - { name: doctrine.event_subscriber, connection: default }

  coopcycle.tag_manager:
    class: AppBundle\Service\TagManager
    arguments: [ '@doctrine' ]

  coopcycle.order_manager:
    public: true
    class: AppBundle\Service\OrderManager
    arguments:
      - "@sm.factory"
      - "@command_bus"

  coopcycle.delivery.manager:
    class: AppBundle\Service\DeliveryManager
    arguments:
      - "@coopcycle.expression_language"

  coopcycle.stripe_manager:
    class: AppBundle\Service\StripeManager
    arguments:
      - "@coopcycle.settings_manager"

  coopcycle.order_timeline_calculator:
    class: AppBundle\Utils\OrderTimelineCalculator
    arguments:
      - '@routing_service'
      - {
          'total <= 2000':       '10 minutes',
          'total in 2000..5000': '15 minutes',
          'total > 5000':        '30 minutes'
        }

  coopcycle.cart_provider:
    class: AppBundle\Service\CartProviderService
    arguments:
      - "@sylius.context.cart"
      - "@serializer"

  task.entity_listener:
    class: AppBundle\Entity\Listener\TaskListener
    arguments:
      - "@event_bus"
      - "@logger"
    tags:
      - { name: doctrine.orm.entity_listener }

  my.delivery_normalizer:
    class: AppBundle\Serializer\DeliveryNormalizer
    arguments:
      - "@api_platform.jsonld.normalizer.item"
      - "@coopcycle.geocoder"
      - "@security.token_storage"
      - "@routing_service"
      - "@logger"
    tags: [ { name: serializer.normalizer, priority: 128 } ]

  app.restaurant_normalizer:
    class: AppBundle\Serializer\RestaurantNormalizer
    arguments:
      - "@api_platform.jsonld.normalizer.item"
    tags: [ { name: serializer.normalizer, priority: 128 } ]

  coopcycle.api.normalizer.task:
    class: AppBundle\Serializer\TaskNormalizer
    arguments:
      - "@api_platform.jsonld.normalizer.item"
      - "@api_platform.iri_converter"
    tags: [ { name: serializer.normalizer, priority: 128 } ]

  coopcycle.api.normalizer.task_list:
    class: AppBundle\Serializer\TaskListNormalizer
    arguments:
      - "@api_platform.jsonld.normalizer.item"
    tags: [ { name: serializer.normalizer, priority: 128 } ]

  coopcycle.normalizer.cart:
    class: AppBundle\Serializer\CartNormalizer
    arguments:
      - "@serializer.normalizer.object"
    tags: [ { name: serializer.normalizer, priority: 128 } ]

  coopcycle.normalizer.order.jsonld:
    class: AppBundle\Serializer\JsonLd\OrderNormalizer
    arguments:
      - "@api_platform.jsonld.normalizer.item"
      - "@coopcycle.sylius.factory.order"
      - "@sylius.repository.product"
      - "@sylius.repository.product_option_value"
      - "@sylius.product_variant_resolver.default"
      - "@sylius.factory.order_item"
      - "@sylius.order_item_quantity_modifier"
      - "@sylius.order_modifier"
    tags: [ { name: serializer.normalizer, priority: 128 } ]

  coopcycle.normalizer.order_item.json:
    class: AppBundle\Serializer\Json\OrderItemNormalizer
    arguments:
      - "@serializer.normalizer.object"
    tags: [ { name: serializer.normalizer, priority: 128 } ]

  coopcycle.normalizer.notification.json:
    class: AppBundle\Serializer\Json\NotificationNormalizer
    arguments:
      - "@serializer.normalizer.object"
      - "@router"
      - "@translator"
    tags: [ { name: serializer.normalizer, priority: 128 } ]

  coopcycle.normalizer.restaurant_menu.jsonld:
    class: AppBundle\Serializer\JsonLd\RestaurantMenuNormalizer
    arguments:
      - "@api_platform.jsonld.normalizer.item"
      - "@sylius.locale_provider"
      - "@sylius.product_variant_resolver.default"
    tags: [ { name: serializer.normalizer, priority: 128 } ]

  'AppBundle\Form\AddressType':
    arguments: [ '@translator', '%country_iso%' ]
    tags:
      - { name: form.type }

  'AppBundle\Form\DeliveryAddressType':
    arguments: [ '@translator', '%country_iso%' ]
    tags:
      - { name: form.type }

  'AppBundle\Form\DeliveryType':
    arguments: [ '@doctrine', '@routing_service', '@translator' ]
    tags:
      - { name: form.type }

  'AppBundle\Form\DeliveryEmbedType':
    arguments: [ '@doctrine', '@routing_service', '@translator', '%country_iso%' ]
    tags: [ form.type ]

  'AppBundle\Form\OrderType':
    arguments: [ '@sm.factory', '@security.authorization_checker' ]
    tags: [ form.type ]

  'AppBundle\Form\TaskUploadType':
    arguments: [ '@coopcycle.utils.task_spreadsheet_parser' ]
    tags: [ form.type ]

  coopcycle.utils.task_spreadsheet_parser:
    class: AppBundle\Utils\TaskSpreadsheetParser
    arguments:
      - "@coopcycle.geocoder"
      - "@coopcycle.tag_manager"
      - "@slugify"
      - "@libphonenumber.phone_number_util"
      - "%country_iso%"

  'AppBundle\Form\TaskExportType':
    arguments: [ '@coopcycle.repository.task' ]
    tags: [ form.type ]

  'AppBundle\Form\SettingsType':
    arguments: [ '@coopcycle.settings_manager' ]
    tags: [ form.type ]

  'AppBundle\Form\TaskType':
    arguments: [ '@coopcycle.tag_manager' ]
    tags: [ form.type ]

  'AppBundle\Form\RestaurantType':
    arguments: [ '@security.authorization_checker', '@security.token_storage', '%country_iso%' ]
    tags: [ form.type ]

  'AppBundle\Form\StoreType':
    arguments: [ '@security.authorization_checker', '@security.token_storage', '%country_iso%' ]
    tags: [ form.type ]

  'AppBundle\Form\StoreTokenType':
    arguments:
      - '@coopcycle.store_token_manager'
    tags: [ form.type ]

  'AppBundle\Form\ProductOptionType':
    arguments: [ '@translator' ]
    tags: [ form.type ]

  'AppBundle\Form\MenuEditor\TaxonProductType':
    arguments: [ '@sylius.repository.product' ]
    tags: [ form.type ]

  'AppBundle\Form\ProductType':
    arguments: [ '@sylius.factory.product_variant', '@sylius.product_variant_resolver.default' ]
    tags: [ form.type ]

  my.jwt_listener:
    class: AppBundle\EventListener\JwtListener
    tags:
      - { name: kernel.event_listener, event: lexik_jwt_authentication.on_authentication_success, method: onAuthenticationSuccess }

  my.delivery_repository:
    class: AppBundle\Entity\DeliveryRepository
    factory: ['@doctrine.orm.default_entity_manager', getRepository]
    arguments:
      - AppBundle\Entity\Delivery

  coopcycle.repository.task:
    class: Doctrine\ORM\EntityRepository
    factory: ['@doctrine.orm.default_entity_manager', getRepository]
    arguments:
      - AppBundle\Entity\Task

  coopcycle.repository.restaurant:
    class: AppBundle\Entity\RestaurantRepository
    factory: ['@doctrine.orm.default_entity_manager', getRepository]
    arguments:
      - AppBundle\Entity\Restaurant

  routing_service:
    public: true
    class: AppBundle\Service\Routing\Osrm
    arguments:
      - '@csa_guzzle.client.osrm'

  'AppBundle\Filter\RestaurantFilter':
    arguments: [ '@doctrine', '@request_stack', '@logger', { distance: "exact", coordinate: "exact" } ]
    tags: [ 'api_platform.filter' ]

  twig.extension.text:
    class: Twig_Extensions_Extension_Text
    tags:
      - { name: twig.extension }

  twig.extension.intl:
    class: Twig_Extensions_Extension_Intl
    tags:
      - { name: twig.extension }

  coopcycle.twig.runtime.order_state_resolver:
    class: AppBundle\Twig\OrderStateResolver
    arguments: [ '@sm.factory' ]
    public: false
    tags:
      - { name: twig.runtime }

  coopcycle.twig.runtime.sylius_variant_resolver:
    class: AppBundle\Twig\SyliusVariantResolver
    arguments: [ '@sylius.product_variant_resolver.default' ]
    public: false
    tags:
      - { name: twig.runtime }

  coopcycle.twig.runtime.setting_resolver:
    class: AppBundle\Twig\SettingResolver
    arguments: [ '@coopcycle.settings_manager' ]
    public: false
    tags:
      - { name: twig.runtime }

  coopcycle.twig.runtime.price_format_resolver:
    class: AppBundle\Twig\PriceFormatResolver
    arguments:
      - '@sylius.context.currency'
      - '@sylius.templating.helper.currency'
    public: false
    tags:
      - { name: twig.runtime }

  swiftmailer.transport.eventdispatcher.mailjet:
    class: Swift_Events_SimpleEventDispatcher

  swiftmailer.mailer.transport.mailjet:
      class: AppBundle\Service\MailjetTransport
      arguments:
          - "@swiftmailer.transport.eventdispatcher.mailjet"
          - "%mailjet.api_key%"
          - "%mailjet.secret_key%"
          - "@logger"

  swiftmailer.logger:
      class: AppBundle\Service\MailLoggerService
      arguments: ["@logger"]
      tags:
        - { name: monolog.logger, channel: mailer }
        - { name: "swiftmailer.default.plugin" }

  coopcycle.metrics_helper:
    class: AppBundle\Utils\MetricsHelper
    arguments:
      - "%database_name%"
      - "@m6_statsd"

  coopcycle.web_success_handler:
    class: AppBundle\EventListener\AuthenticationWebSuccessHandler
    arguments: ['@security.http_utils', '@router']

  coopcycle.task_manager:
    class: AppBundle\Service\TaskManager
    arguments:
      - "@command_bus"

  coopcycle.settings_manager:
    class: AppBundle\Service\SettingsManager
    arguments: ["@craue_config", "%craue_config.entity_name%", "@doctrine", "@logger"]

  coopcycle.email_manager:
    class: AppBundle\Service\EmailManager
    arguments:
      - "@mailer"
      - "@templating"
      - "@translator"
      - "@coopcycle.settings_manager"
      - "%transactional_address%"

  coopcycle.notification_manager:
    class: AppBundle\Service\NotificationManager
    arguments:
      - "@doctrine"
      - "@snc_redis.default"
      - "@serializer"
      - "@translator"

  coopcycle.remote_push_notification_manager:
    class: AppBundle\Service\RemotePushNotificationManager
    arguments:
      - "@csa_guzzle.client.fcm"
      - "@apns_php.push"
      - "%apns_certificate_pass_phrase%"
      - "%fcm_server_api_key%"
      - "@coopcycle.repository.remote_push_token"

  coopcycle.geocoder:
    class: AppBundle\Service\Geocoder
    arguments:
      - "@coopcycle.settings_manager"
      - "%country_iso%"
      - "%coopcycle.locale%"

  'AppBundle\Validator\Constraints\CartValidator':
    arguments: [ '@routing_service' ]
    tags:
      - { name: validator.constraint_validator }

  'AppBundle\Validator\Constraints\DeliveryValidator':
    arguments: [ '@routing_service' ]
    tags:
      - { name: validator.constraint_validator }

  'AppBundle\Validator\Constraints\OrderValidator':
    arguments: [ '@routing_service', '@coopcycle.expression_language' ]
    tags:
      - { name: validator.constraint_validator }

  'AppBundle\EventListener\TaskCollectionSubscriber':
    arguments: [ '@event_dispatcher', '@routing_service', '@logger' ]
    tags:
      - { name: doctrine.event_subscriber, connection: default }

  'AppBundle\EventListener\TaskSubscriber':
    arguments: [ '@event_bus', '@logger' ]
    tags:
      - { name: doctrine.event_subscriber, connection: default }

  'AppBundle\Api\EventSubscriber\RemotePushTokenSubscriber':
      arguments:
          - '@security.token_storage'
          - '@doctrine'
          - '@logger'
      tags: [ 'kernel.event_subscriber' ]

  'AppBundle\Api\EventSubscriber\PricingSubscriber':
      arguments:
          - '@coopcycle.delivery.manager'
          - '@routing_service'
          - '@coopcycle.geocoder'
          - '@security.token_storage'
      tags: [ 'kernel.event_subscriber' ]

  'AppBundle\Api\EventSubscriber\RestaurantSubscriber':
      # arguments:
      #     - '@coopcycle.delivery.manager'
      #     - '@routing_service'
      #     - '@coopcycle.geocoder'
      #     - '@security.token_storage'
      tags: [ 'kernel.event_subscriber' ]

  'AppBundle\Action\Settings':
      arguments:
        - '@coopcycle.settings_manager'
        - '%country_iso%'
        - '%coopcycle.locale%'

  'AppBundle\Security\StoreTokenAuthenticator':
    parent: lexik_jwt_authentication.jwt_token_authenticator.not_expiring
    arguments: [ '@doctrine' ]

  # The services below are needed to generate tokens that never expire
  # @see https://github.com/lexik/LexikJWTAuthenticationBundle/issues/521

  lexik_jwt_authentication.jws_provider.not_expiring:
    public: true
    parent: Lexik\Bundle\JWTAuthenticationBundle\Services\JWSProvider\JWSProviderInterface
    arguments:
      index_3: ~

  lexik_jwt_authentication.encoder.not_expiring:
    parent: lexik_jwt_authentication.encoder
    arguments:
      index_0: '@lexik_jwt_authentication.jws_provider.not_expiring'

  lexik_jwt_authentication.jwt_manager.not_expiring:
    parent: lexik_jwt_authentication.jwt_manager
    arguments:
      index_0: '@lexik_jwt_authentication.encoder.not_expiring'

  lexik_jwt_authentication.jwt_token_authenticator.not_expiring:
    parent: lexik_jwt_authentication.jwt_token_authenticator
    arguments:
      index_0: '@lexik_jwt_authentication.jwt_manager.not_expiring'

  coopcycle.store_token_manager:
    class: AppBundle\Security\StoreTokenManager
    arguments:
      - '@security.token_storage'
      - '@lexik_jwt_authentication.jwt_manager.not_expiring'
      - '@event_dispatcher'
